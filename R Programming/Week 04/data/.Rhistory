temp <- split(outcome, outcome$State)
#ysf<-temp[[state]][,c(2,val,7)]
now <- lapply(temp, function(fdf) fdf[c(7, val,2)])
if(num=="best") tempnum<- 1
else if(num=="worst") tempnum<- nrow(ysf)
else tempnum = num
tempnum<-as.numeric(tempnum)
answer <- data.frame(state=0, hospital=0)
lapply(now, function(ads){
if(nrow(ads)<tempnum){
return(NA)
}
ysdf<- ads[complete.cases(ads),]
print(ysdf)
new<- order(ysdf[,2],ysdf[,3])
if(num=="best") num<- 1
if(num=="worst") num<- length(new)
num<-as.numeric(num)
#print(ysdf[new[num],])
# print("okay")
# print(ysdf[new[num],][,1])
# print("Done")
# print(ysdf[new[num],][,3])
# print("All")
print(c(ysdf[new[num],][,1],ysdf[new[num],][,3]))
# answer<- rbind(answer, num)
# answer<- rbind(answer, c(ysdf[new[num],][,2],ysdf[new[num],][,3]))
})
#print(ysf)
answer
}
rankall("heart attack", 20)
rankall<- function(outcomeType, num="best"){
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
stateList<- levels(as.factor(outcome[,7]))
types<-c("heart attack", "heart failure", "pneumonia")
if(!outcomeType %in% types){
stop("invalid outcome")
}
outcome[, 11] <- as.numeric(outcome[, 11])
outcome[, 17] <- as.numeric(outcome[, 17])
outcome[, 23] <- as.numeric(outcome[, 23])
if(outcomeType=="heart attack") val<-11
if(outcomeType=="heart failure") val<-17
if(outcomeType=="pneumonia") val<-23
temp <- split(outcome, outcome$State)
#ysf<-temp[[state]][,c(2,val,7)]
now <- lapply(temp, function(fdf) fdf[c(7, val,2)])
if(num=="best") tempnum<- 1
else if(num=="worst") tempnum<- nrow(ysf)
else tempnum = num
tempnum<-as.numeric(tempnum)
answer <- data.frame(state=0, hospital=0)
lapply(now, function(ads){
if(nrow(ads)<tempnum){
return(NA)
}
ysdf<- ads[complete.cases(ads),]
#print(ysdf)
new<- order(ysdf[,2],ysdf[,3])
if(num=="best") num<- 1
if(num=="worst") num<- length(new)
num<-as.numeric(num)
#print(ysdf[new[num],])
# print("okay")
# print(ysdf[new[num],][,1])
# print("Done")
# print(ysdf[new[num],][,3])
# print("All")
print(c(ysdf[new[num],][,1],ysdf[new[num],][,3]))
# answer<- rbind(answer, num)
# answer<- rbind(answer, c(ysdf[new[num],][,2],ysdf[new[num],][,3]))
})
#print(ysf)
answer
}
rankall("heart attack", 20)
best<- function(state, outcomeType){
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
stateList<- levels(as.factor(outcome[,7]))
if(!state %in% stateList){
stop("invalid state")
}
types<-c("heart attack", "heart failure", "pneumonia")
if(!outcomeType %in% types){
stop("invalid outcome")
}
outcome[, 11] <- as.numeric(outcome[, 11])
outcome[, 17] <- as.numeric(outcome[, 17])
outcome[, 23] <- as.numeric(outcome[, 23])
if(outcomeType=="heart attack") val<-11
if(outcomeType=="heart failure") val<-17
if(outcomeType=="pneumonia") val<-23
temp <- split(outcome, outcome$State)
ysf<-temp[[state]][,c(2,val)]
new<- order(ysf[,2],ysf[,1])
ysf[new[1],][,1]
#ysf[which.min(ysf[,2]),][,1]
#print(valuese)
#which.min(temp[[asdf]]$State)
}
best("SC", "heart attack")
best("NY", "pneumonia")
best("AK", "pneumonia")
rankhospital<- function(state, outcomeType, num="best"){
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
stateList<- levels(as.factor(outcome[,7]))
if(!state %in% stateList){
stop("invalid state")
}
types<-c("heart attack", "heart failure", "pneumonia")
if(!outcomeType %in% types){
stop("invalid outcome")
}
outcome[, 11] <- as.numeric(outcome[, 11])
outcome[, 17] <- as.numeric(outcome[, 17])
outcome[, 23] <- as.numeric(outcome[, 23])
if(outcomeType=="heart attack") val<-11
if(outcomeType=="heart failure") val<-17
if(outcomeType=="pneumonia") val<-23
temp <- split(outcome, outcome$State)
ysf<-temp[[state]][,c(2,val)]
#print(ysf)
if(num=="best") tempnum<- 1
else if(num=="worst") tempnum<- nrow(ysf)
else tempnum = num
tempnum<-as.numeric(tempnum)
if(nrow(ysf)<tempnum){
return(NA)
}
ysdf<- ysf[complete.cases(ysf),]
#print(ysf)
new<- order(ysdf[,2],ysdf[,1])
#print(new)
#print(nrow(new))
#print(nrow(new))
#print(num)
if(num=="best") num<- 1
if(num=="worst") num<- length(new)
num<-as.numeric(num)
#print(num)
if( num > length(new) ) return(NA)
#print(new[num])
#ysf
ysf[new[num],][,1]
}
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital("NY", "heart attack", 7)
r <- rankall("heart attack", 4)
r <- rankall("pneumonia", "worst")
rankall<- function(outcomeType, num="best"){
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
stateList<- levels(as.factor(outcome[,7]))
types<-c("heart attack", "heart failure", "pneumonia")
if(!outcomeType %in% types){
stop("invalid outcome")
}
outcome[, 11] <- as.numeric(outcome[, 11])
outcome[, 17] <- as.numeric(outcome[, 17])
outcome[, 23] <- as.numeric(outcome[, 23])
if(outcomeType=="heart attack") val<-11
if(outcomeType=="heart failure") val<-17
if(outcomeType=="pneumonia") val<-23
temp <- split(outcome, outcome$State)
#ysf<-temp[[state]][,c(2,val,7)]
now <- lapply(temp, function(fdf) fdf[c(7, val,2)])
if(num=="best") tempnum<- 1
else if(num=="worst") tempnum<- nrow(now)
else tempnum = num
tempnum<-as.numeric(tempnum)
answer <- data.frame(state=0, hospital=0)
lapply(now, function(ads){
if(nrow(ads)<tempnum){
return(NA)
}
ysdf<- ads[complete.cases(ads),]
#print(ysdf)
new<- order(ysdf[,2],ysdf[,3])
if(num=="best") num<- 1
if(num=="worst") num<- length(new)
num<-as.numeric(num)
#print(ysdf[new[num],])
# print("okay")
# print(ysdf[new[num],][,1])
# print("Done")
# print(ysdf[new[num],][,3])
# print("All")
print(c(ysdf[new[num],][,1],ysdf[new[num],][,3]))
# answer<- rbind(answer, num)
# answer<- rbind(answer, c(ysdf[new[num],][,2],ysdf[new[num],][,3]))
})
#print(ysf)
answer
}
r <- rankall("pneumonia", "worst")
rankall<- function(outcomeType, num="best"){
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
stateList<- levels(as.factor(outcome[,7]))
types<-c("heart attack", "heart failure", "pneumonia")
if(!outcomeType %in% types){
stop("invalid outcome")
}
outcome[, 11] <- as.numeric(outcome[, 11])
outcome[, 17] <- as.numeric(outcome[, 17])
outcome[, 23] <- as.numeric(outcome[, 23])
if(outcomeType=="heart attack") val<-11
if(outcomeType=="heart failure") val<-17
if(outcomeType=="pneumonia") val<-23
temp <- split(outcome, outcome$State)
#ysf<-temp[[state]][,c(2,val,7)]
now <- lapply(temp, function(fdf) fdf[c(7, val,2)])
if(num=="best") tempnum<- 1
else if(num=="worst") tempnum<- 1
else tempnum = num
tempnum<-as.numeric(tempnum)
answer <- data.frame(state=0, hospital=0)
lapply(now, function(ads){
if(nrow(ads)<tempnum){
return(NA)
}
ysdf<- ads[complete.cases(ads),]
#print(ysdf)
new<- order(ysdf[,2],ysdf[,3])
if(num=="best") num<- 1
if(num=="worst") num<- length(new)
num<-as.numeric(num)
#print(ysdf[new[num],])
# print("okay")
# print(ysdf[new[num],][,1])
# print("Done")
# print(ysdf[new[num],][,3])
# print("All")
print(c(ysdf[new[num],][,1],ysdf[new[num],][,3]))
# answer<- rbind(answer, num)
# answer<- rbind(answer, c(ysdf[new[num],][,2],ysdf[new[num],][,3]))
})
#print(ysf)
answer
}
r <- rankall("pneumonia", "worst")
r <- rankall("heart failure", 10)
rankhospital("NY", "heart attack", 7)
rankhospital<- function(state, outcomeType, num="best"){
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
stateList<- levels(as.factor(outcome[,7]))
if(!state %in% stateList){
stop("invalid state")
}
types<-c("heart attack", "heart failure", "pneumonia")
if(!outcomeType %in% types){
stop("invalid outcome")
}
outcome[, 11] <- as.numeric(outcome[, 11])
outcome[, 17] <- as.numeric(outcome[, 17])
outcome[, 23] <- as.numeric(outcome[, 23])
if(outcomeType=="heart attack") val<-11
if(outcomeType=="heart failure") val<-17
if(outcomeType=="pneumonia") val<-23
temp <- split(outcome, outcome$State)
ysf<-temp[[state]][,c(2,val)]
#print(ysf)
if(num=="best") tempnum<- 1
else if(num=="worst") tempnum<- nrow(ysf)
else tempnum = num
tempnum<-as.numeric(tempnum)
if(nrow(ysf)<tempnum){
return(NA)
}
ysdf<- ysf[complete.cases(ysf),]
#print(ysf)
new<- order(ysdf[,2],ysdf[,1])
#print(new)
#print(nrow(new))
#print(nrow(new))
#print(num)
if(num=="best") num<- 1
if(num=="worst") num<- length(new)
num<-as.numeric(num)
print(num)
if( num > length(new) ) return(NA)
print(new[num])
#ysf
ysf[new[num],][,1]
}
rankhospital("NY", "heart attack", 7)
rankhospital<- function(state, outcomeType, num="best"){
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
stateList<- levels(as.factor(outcome[,7]))
if(!state %in% stateList){
stop("invalid state")
}
types<-c("heart attack", "heart failure", "pneumonia")
if(!outcomeType %in% types){
stop("invalid outcome")
}
outcome[, 11] <- as.numeric(outcome[, 11])
outcome[, 17] <- as.numeric(outcome[, 17])
outcome[, 23] <- as.numeric(outcome[, 23])
if(outcomeType=="heart attack") val<-11
if(outcomeType=="heart failure") val<-17
if(outcomeType=="pneumonia") val<-23
temp <- split(outcome, outcome$State)
ysf<-temp[[state]][,c(2,val)]
#print(ysf)
if(num=="best") tempnum<- 1
else if(num=="worst") tempnum<- nrow(ysf)
else tempnum = num
tempnum<-as.numeric(tempnum)
if(nrow(ysf)<tempnum){
return(NA)
}
ysdf<- ysf[complete.cases(ysf),]
#print(ysf)
new<- order(ysdf[,2],ysdf[,1])
print(new)
#print(nrow(new))
#print(nrow(new))
#print(num)
if(num=="best") num<- 1
if(num=="worst") num<- length(new)
num<-as.numeric(num)
print(num)
if( num > length(new) ) return(NA)
print(new[num])
#ysf
ysf[new[num],][,1]
}
rankhospital("NY", "heart attack", 7)
rankhospital<- function(state, outcomeType, num="best"){
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
stateList<- levels(as.factor(outcome[,7]))
if(!state %in% stateList){
stop("invalid state")
}
types<-c("heart attack", "heart failure", "pneumonia")
if(!outcomeType %in% types){
stop("invalid outcome")
}
outcome[, 11] <- as.numeric(outcome[, 11])
outcome[, 17] <- as.numeric(outcome[, 17])
outcome[, 23] <- as.numeric(outcome[, 23])
if(outcomeType=="heart attack") val<-11
if(outcomeType=="heart failure") val<-17
if(outcomeType=="pneumonia") val<-23
temp <- split(outcome, outcome$State)
ysf<-temp[[state]][,c(2,val)]
#print(ysf)
if(num=="best") tempnum<- 1
else if(num=="worst") tempnum<- nrow(ysf)
else tempnum = num
tempnum<-as.numeric(tempnum)
if(nrow(ysf)<tempnum){
return(NA)
}
ysdf<- ysf[complete.cases(ysf),]
print(ysf)
new<- order(ysdf[,2],ysdf[,1])
print(new)
#print(nrow(new))
#print(nrow(new))
#print(num)
if(num=="best") num<- 1
if(num=="worst") num<- length(new)
num<-as.numeric(num)
print(num)
if( num > length(new) ) return(NA)
print(new[num])
#ysf
ysf[new[num],][,1]
}
rankhospital("NY", "heart attack", 7)
rankhospital<- function(state, outcomeType, num="best"){
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
stateList<- levels(as.factor(outcome[,7]))
if(!state %in% stateList){
stop("invalid state")
}
types<-c("heart attack", "heart failure", "pneumonia")
if(!outcomeType %in% types){
stop("invalid outcome")
}
outcome[, 11] <- as.numeric(outcome[, 11])
outcome[, 17] <- as.numeric(outcome[, 17])
outcome[, 23] <- as.numeric(outcome[, 23])
if(outcomeType=="heart attack") val<-11
if(outcomeType=="heart failure") val<-17
if(outcomeType=="pneumonia") val<-23
temp <- split(outcome, outcome$State)
ysf<-temp[[state]][,c(2,val)]
#print(ysf)
if(num=="best") tempnum<- 1
else if(num=="worst") tempnum<- nrow(ysf)
else tempnum = num
tempnum<-as.numeric(tempnum)
if(nrow(ysf)<tempnum){
return(NA)
}
ysdf<- ysf[complete.cases(ysf),]
print(ysf)
new<- order(ysdf[,2],ysdf[,1])
print(new)
#print(nrow(new))
#print(nrow(new))
#print(num)
if(num=="best") num<- 1
if(num=="worst") num<- length(new)
num<-as.numeric(num)
print(num)
if( num > length(new) ) return(NA)
print(new[num])
#ysf
ysdf[new[num],][,1]
}
rankhospital("NY", "heart attack", 7)
rankhospital<- function(state, outcomeType, num="best"){
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
stateList<- levels(as.factor(outcome[,7]))
if(!state %in% stateList){
stop("invalid state")
}
types<-c("heart attack", "heart failure", "pneumonia")
if(!outcomeType %in% types){
stop("invalid outcome")
}
outcome[, 11] <- as.numeric(outcome[, 11])
outcome[, 17] <- as.numeric(outcome[, 17])
outcome[, 23] <- as.numeric(outcome[, 23])
if(outcomeType=="heart attack") val<-11
if(outcomeType=="heart failure") val<-17
if(outcomeType=="pneumonia") val<-23
temp <- split(outcome, outcome$State)
ysf<-temp[[state]][,c(2,val)]
#print(ysf)
if(num=="best") tempnum<- 1
else if(num=="worst") tempnum<- nrow(ysf)
else tempnum = num
tempnum<-as.numeric(tempnum)
if(nrow(ysf)<tempnum){
return(NA)
}
ysdf<- ysf[complete.cases(ysf),]
print(ysf)
new<- order(ysdf[,2],ysdf[,1])
print(new)
#print(nrow(new))
#print(nrow(new))
#print(num)
if(num=="best") num<- 1
if(num=="worst") num<- length(new)
num<-as.numeric(num)
#print(num)
if( num > length(new) ) return(NA)
#print(new[num])
#ysf
ysdf[new[num],][,1]
}
rankhospital("NY", "heart attack", 7)
rankhospital<- function(state, outcomeType, num="best"){
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
stateList<- levels(as.factor(outcome[,7]))
if(!state %in% stateList){
stop("invalid state")
}
types<-c("heart attack", "heart failure", "pneumonia")
if(!outcomeType %in% types){
stop("invalid outcome")
}
outcome[, 11] <- as.numeric(outcome[, 11])
outcome[, 17] <- as.numeric(outcome[, 17])
outcome[, 23] <- as.numeric(outcome[, 23])
if(outcomeType=="heart attack") val<-11
if(outcomeType=="heart failure") val<-17
if(outcomeType=="pneumonia") val<-23
temp <- split(outcome, outcome$State)
ysf<-temp[[state]][,c(2,val)]
#print(ysf)
if(num=="best") tempnum<- 1
else if(num=="worst") tempnum<- nrow(ysf)
else tempnum = num
tempnum<-as.numeric(tempnum)
if(nrow(ysf)<tempnum){
return(NA)
}
ysdf<- ysf[complete.cases(ysf),]
#print(ysf)
new<- order(ysdf[,2],ysdf[,1])
#print(new)
#print(nrow(new))
#print(nrow(new))
#print(num)
if(num=="best") num<- 1
if(num=="worst") num<- length(new)
num<-as.numeric(num)
#print(num)
if( num > length(new) ) return(NA)
#print(new[num])
#ysf
ysdf[new[num],][,1]
}
rankhospital("NY", "heart attack", 7)
best("SC", "heart attack")
best("NY", "pneumonia")
best("AK", "pneumonia")
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital("NY", "heart attack", 7)
r <- rankall("heart attack", 4)
r <- rankall("pneumonia", "worst")
r <- rankall("heart failure", 10)
